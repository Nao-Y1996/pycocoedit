name: ci

on: [ push, pull_request ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python-version: "3.10.14"
            coverage: "false"
          - python-version: "3.11.9"
            coverage: "false"
          - python-version: "3.12.4"
            coverage: "false"
          - python-version: "3.13.3"
            coverage: "true"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create false

      - name: Install dependencies
        run: |
          poetry install

      # ---------- en: Test + (conditionally) coverage ----------
      - name: Run tests
        run: |
          if [ "${{ matrix.coverage }}" = "true" ]; then
            poetry run pytest \
              --cov=pycocoedit \
              --cov-report=xml \
              --cov-branch \
              --cov-report=term-missing \
              --junitxml=junit.xml \
              -o junit_family=legacy
          else
            poetry run pytest -q
          fi

      # ---------- en: Upload to Codecov -------
      - name: Upload coverage to Codecov
        if: ${{ matrix.coverage == 'true' }}
        uses: codecov/codecov-action@v4
        with:
          file: coverage.xml     # pytest-cov が生成
          flags: py313
          # token: ${{ secrets.CODECOV_TOKEN }}
      
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }} && ${{ matrix.coverage == 'true' }}
        uses: codecov/test-results-action@v1
        # with:
        #   token: ${{ secrets.CODECOV_TOKEN }}

